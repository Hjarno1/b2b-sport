
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.EFMigrationsHistoryScalarFieldEnum = {
  MigrationId: 'MigrationId',
  ProductVersion: 'ProductVersion'
};

exports.Prisma.AlertsScalarFieldEnum = {
  Id: 'Id',
  Active: 'Active',
  ErrorMsg: 'ErrorMsg',
  Label: 'Label',
  ErrorType: 'ErrorType',
  Color: 'Color',
  B2BParrentProductsparrentProduct_id: 'B2BParrentProductsparrentProduct_id',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BProductproduct_id: 'B2BProductproduct_id',
  IsCompleted: 'IsCompleted',
  SupplierProduct: 'SupplierProduct',
  SupplierSKU: 'SupplierSKU',
  Supplier: 'Supplier',
  SupplierProductImageURL: 'SupplierProductImageURL',
  B2BSupplierId: 'B2BSupplierId',
  TempB2BProductsId: 'TempB2BProductsId'
};

exports.Prisma.AspNetRoleClaimsScalarFieldEnum = {
  Id: 'Id',
  RoleId: 'RoleId',
  ClaimType: 'ClaimType',
  ClaimValue: 'ClaimValue'
};

exports.Prisma.AspNetRolesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  NormalizedName: 'NormalizedName',
  ConcurrencyStamp: 'ConcurrencyStamp'
};

exports.Prisma.AspNetUserClaimsScalarFieldEnum = {
  Id: 'Id',
  UserId: 'UserId',
  ClaimType: 'ClaimType',
  ClaimValue: 'ClaimValue'
};

exports.Prisma.AspNetUserLoginsScalarFieldEnum = {
  LoginProvider: 'LoginProvider',
  ProviderKey: 'ProviderKey',
  ProviderDisplayName: 'ProviderDisplayName',
  UserId: 'UserId'
};

exports.Prisma.AspNetUserRolesScalarFieldEnum = {
  UserId: 'UserId',
  RoleId: 'RoleId'
};

exports.Prisma.AspNetUsersScalarFieldEnum = {
  Id: 'Id',
  UserName: 'UserName',
  NormalizedUserName: 'NormalizedUserName',
  Email: 'Email',
  NormalizedEmail: 'NormalizedEmail',
  EmailConfirmed: 'EmailConfirmed',
  PasswordHash: 'PasswordHash',
  SecurityStamp: 'SecurityStamp',
  ConcurrencyStamp: 'ConcurrencyStamp',
  PhoneNumber: 'PhoneNumber',
  PhoneNumberConfirmed: 'PhoneNumberConfirmed',
  TwoFactorEnabled: 'TwoFactorEnabled',
  LockoutEnd: 'LockoutEnd',
  LockoutEnabled: 'LockoutEnabled',
  AccessFailedCount: 'AccessFailedCount'
};

exports.Prisma.AspNetUserTokensScalarFieldEnum = {
  UserId: 'UserId',
  LoginProvider: 'LoginProvider',
  Name: 'Name',
  Value: 'Value'
};

exports.Prisma.B2BBrandsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Comment: 'Comment',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BCategoryGroupsScalarFieldEnum = {
  Id: 'Id',
  CategoryGroup: 'CategoryGroup',
  B2BCountryId: 'B2BCountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  Active: 'Active',
  AlertId: 'AlertId',
  AboveTheFold: 'AboveTheFold',
  BelowTheFold: 'BelowTheFold',
  NopOrder: 'NopOrder',
  NopId: 'NopId',
  NopSynced: 'NopSynced',
  CustomText: 'CustomText',
  ProductHighligt: 'ProductHighligt',
  SeoURL: 'SeoURL'
};

exports.Prisma.B2BCountryScalarFieldEnum = {
  Id: 'Id',
  CountryCode: 'CountryCode',
  CountryCurrency: 'CountryCurrency',
  CountryName: 'CountryName',
  NopWebsite: 'NopWebsite',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  NopProjectName: 'NopProjectName',
  LatestProductSync: 'LatestProductSync',
  NopCountryId: 'NopCountryId'
};

exports.Prisma.B2BDeliveryTimeScalarFieldEnum = {
  Id: 'Id',
  DeliveryTime: 'DeliveryTime',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BMainCategoryScalarFieldEnum = {
  B2BMainCategoryId: 'B2BMainCategoryId',
  CategoryGroupId: 'CategoryGroupId',
  Category: 'Category',
  fk_country: 'fk_country',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BParrentProductsparrentProduct_id: 'B2BParrentProductsparrentProduct_id',
  AboveTheFold: 'AboveTheFold',
  BelowTheFold: 'BelowTheFold',
  NopOrder: 'NopOrder',
  Active: 'Active',
  AlertId: 'AlertId',
  NopParentIdId: 'NopParentIdId',
  NopSynced: 'NopSynced',
  CustomText: 'CustomText',
  NopChildId: 'NopChildId',
  SeoURL: 'SeoURL',
  TempB2BParentProductId: 'TempB2BParentProductId'
};

exports.Prisma.B2BMasterPrintPositionsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CountryId: 'CountryId'
};

exports.Prisma.B2BMaterialsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BOrderQuantityScalarFieldEnum = {
  Id: 'Id',
  Quantity: 'Quantity',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BParrentProductsScalarFieldEnum = {
  parrentProduct_id: 'parrentProduct_id',
  parrentProduct_dimensions: 'parrentProduct_dimensions',
  parrentProduct_height: 'parrentProduct_height',
  parrentProduct_length: 'parrentProduct_length',
  parrentProduct_longDescription: 'parrentProduct_longDescription',
  parrentProduct_mainCategory: 'parrentProduct_mainCategory',
  parrentProduct_masterId: 'parrentProduct_masterId',
  parrentProduct_parrentSku: 'parrentProduct_parrentSku',
  parrentProduct_printPositions: 'parrentProduct_printPositions',
  parrentProduct_printable: 'parrentProduct_printable',
  parrentProduct_shortDescription: 'parrentProduct_shortDescription',
  parrentProduct_width: 'parrentProduct_width',
  parrentProduct_material: 'parrentProduct_material',
  parrentProduct_productName: 'parrentProduct_productName',
  alert: 'alert',
  alertMessage: 'alertMessage',
  alertStatus: 'alertStatus',
  parrentProduct_supplierSubCategory: 'parrentProduct_supplierSubCategory',
  Supplier: 'Supplier',
  fk_country: 'fk_country',
  NopSynced: 'NopSynced',
  B2BProductTypeId: 'B2BProductTypeId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BMasterCategoryId: 'B2BMasterCategoryId',
  B2BBrandsId: 'B2BBrandsId',
  B2BMaterialId: 'B2BMaterialId',
  Deactivate: 'Deactivate',
  StatusId: 'StatusId',
  ProductSheet: 'ProductSheet',
  ProductTemplate: 'ProductTemplate',
  SeoUrl: 'SeoUrl',
  DeleteProduct: 'DeleteProduct',
  B2BDeliveryTimeId: 'B2BDeliveryTimeId',
  B2BOrderQuantityId: 'B2BOrderQuantityId',
  SupplierCategory: 'SupplierCategory',
  SupplierDescription: 'SupplierDescription',
  SupplierProductName: 'SupplierProductName',
  B2BEco: 'B2BEco',
  OfferFrom: 'OfferFrom',
  OfferInPercent: 'OfferInPercent',
  OfferTo: 'OfferTo',
  CampaignId: 'CampaignId'
};

exports.Prisma.B2BPriceScalingScalarFieldEnum = {
  scale_id: 'scale_id',
  scale_minimumQuantity: 'scale_minimumQuantity',
  fk_priceIdid: 'fk_priceIdid',
  alert: 'alert',
  scale_priceDK: 'scale_priceDK',
  scale_priceEU: 'scale_priceEU',
  scale_supplierPrice: 'scale_supplierPrice',
  alertActive: 'alertActive',
  scale_priceFI: 'scale_priceFI',
  fk_country: 'fk_country',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BPrintPositionsScalarFieldEnum = {
  Id: 'Id',
  Position: 'Position',
  print_express: 'print_express',
  print_position: 'print_position',
  print_supplier: 'print_supplier',
  print_productName: 'print_productName',
  MaxColors: 'MaxColors',
  print_dimensions: 'print_dimensions',
  fk_country: 'fk_country',
  fk_imprint_priceClass: 'fk_imprint_priceClass',
  fk_alertId: 'fk_alertId',
  child_product: 'child_product',
  print_type: 'print_type',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  ExternalPrint: 'ExternalPrint',
  parentProductparrentProduct_id: 'parentProductparrentProduct_id',
  IsDisabled: 'IsDisabled'
};

exports.Prisma.B2BPrintTypesScalarFieldEnum = {
  Id: 'Id',
  Type: 'Type',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BProdductsScalarFieldEnum = {
  product_id: 'product_id',
  product_BatteryType: 'product_BatteryType',
  product_CommercialItemHeight: 'product_CommercialItemHeight',
  product_CommercialItemLength: 'product_CommercialItemLength',
  product_CommercialItemWeight: 'product_CommercialItemWeight',
  product_CommercialItemWidth: 'product_CommercialItemWidth',
  product_CountryOfOrigin: 'product_CountryOfOrigin',
  product_DeliveryTimeMT_IL1_T1: 'product_DeliveryTimeMT_IL1_T1',
  product_Flavours: 'product_Flavours',
  product_IntraCode: 'product_IntraCode',
  product_NumberOfBatteries: 'product_NumberOfBatteries',
  product_OrderUnit: 'product_OrderUnit',
  product_PriceClass_IL1_CN: 'product_PriceClass_IL1_CN',
  product_PriceClass_IL1_CN2: 'product_PriceClass_IL1_CN2',
  product_PriceClass_IL1_CN3: 'product_PriceClass_IL1_CN3',
  product_PriceClass_IL1_CN4: 'product_PriceClass_IL1_CN4',
  product_PriceClass_IL1_CN5: 'product_PriceClass_IL1_CN5',
  product_PriceClass_IL1_CN6: 'product_PriceClass_IL1_CN6',
  product_PriceClass_IL1_T1: 'product_PriceClass_IL1_T1',
  product_PriceClass_IL1_T2: 'product_PriceClass_IL1_T2',
  product_PriceClass_IL1_T3: 'product_PriceClass_IL1_T3',
  product_PriceClass_IL1_T4: 'product_PriceClass_IL1_T4',
  product_PriceClass_IL1_T5: 'product_PriceClass_IL1_T5',
  product_PriceClass_IL1_T6: 'product_PriceClass_IL1_T6',
  product_ProductImageURL: 'product_ProductImageURL',
  product_Q_OnPallet: 'product_Q_OnPallet',
  product_SearchTerms: 'product_SearchTerms',
  product_Sizes: 'product_Sizes',
  product_WritingColor: 'product_WritingColor',
  product_brandNames: 'product_brandNames',
  product_longDescriptionDK: 'product_longDescriptionDK',
  product_longDescriptionEN: 'product_longDescriptionEN',
  product_longDescriptionFI: 'product_longDescriptionFI',
  product_shortDescriptionEN: 'product_shortDescriptionEN',
  product_shortDescriptionFI: 'product_shortDescriptionFI',
  product_sku: 'product_sku',
  fk_country: 'fk_country',
  fk_parentSKU: 'fk_parentSKU',
  product_ColorNameId: 'product_ColorNameId',
  product_shortDescription: 'product_shortDescription',
  ProductTypeId: 'ProductTypeId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  product_color: 'product_color',
  product_stock: 'product_stock',
  Supplier: 'Supplier'
};

exports.Prisma.B2BProductImagesScalarFieldEnum = {
  Id: 'Id',
  ImagePath: 'ImagePath',
  fk_childproduct: 'fk_childproduct',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BProductPricesScalarFieldEnum = {
  id: 'id',
  price_validUntill: 'price_validUntill',
  parrentSku: 'parrentSku',
  price_startingPriceDK: 'price_startingPriceDK',
  price_startingPriceEU: 'price_startingPriceEU',
  price_startingPriceFI: 'price_startingPriceFI',
  price_startingPriceSupplier: 'price_startingPriceSupplier',
  fk_country: 'fk_country',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  PriceQ1: 'PriceQ1',
  PriceQ2: 'PriceQ2',
  PriceQ3: 'PriceQ3',
  PriceQ4: 'PriceQ4',
  PriceQ5: 'PriceQ5',
  PriceQ6: 'PriceQ6',
  PriceStart: 'PriceStart',
  PriceP1: 'PriceP1',
  PriceP2: 'PriceP2',
  PriceP3: 'PriceP3',
  PriceP4: 'PriceP4',
  PriceP5: 'PriceP5',
  PriceP6: 'PriceP6',
  ParentProductparrentProduct_id: 'ParentProductparrentProduct_id',
  CostPriceP1: 'CostPriceP1',
  CostPriceP2: 'CostPriceP2',
  CostPriceP3: 'CostPriceP3',
  CostPriceP4: 'CostPriceP4',
  CostPriceP5: 'CostPriceP5',
  CostPriceP6: 'CostPriceP6',
  CostPriceQ1: 'CostPriceQ1',
  CostPriceQ2: 'CostPriceQ2',
  CostPriceQ3: 'CostPriceQ3',
  CostPriceQ4: 'CostPriceQ4',
  CostPriceQ5: 'CostPriceQ5',
  CostPriceQ6: 'CostPriceQ6',
  PreviousCostPriceP1: 'PreviousCostPriceP1',
  PreviousCostPriceP2: 'PreviousCostPriceP2',
  PreviousCostPriceP3: 'PreviousCostPriceP3',
  PreviousCostPriceP4: 'PreviousCostPriceP4',
  PreviousCostPriceP5: 'PreviousCostPriceP5',
  PreviousCostPriceP6: 'PreviousCostPriceP6',
  PreviousCostPriceQ1: 'PreviousCostPriceQ1',
  PreviousCostPriceQ2: 'PreviousCostPriceQ2',
  PreviousCostPriceQ3: 'PreviousCostPriceQ3',
  PreviousCostPriceQ4: 'PreviousCostPriceQ4',
  PreviousCostPriceQ5: 'PreviousCostPriceQ5',
  PreviousCostPriceQ6: 'PreviousCostPriceQ6'
};

exports.Prisma.B2BProductSizeScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BParrentProductsparrentProduct_id: 'B2BParrentProductsparrentProduct_id',
  TempB2BParentProductId: 'TempB2BParentProductId'
};

exports.Prisma.B2BProductTextileSizesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  DisplayOrder: 'DisplayOrder',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BProductTypesScalarFieldEnum = {
  Id: 'Id',
  Type: 'Type',
  B2BMasterCategoryId: 'B2BMasterCategoryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BCountryId: 'B2BCountryId',
  B2BMainCategoryId: 'B2BMainCategoryId'
};

exports.Prisma.B2BResponsiblesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  EconomicId: 'EconomicId',
  Email: 'Email',
  ResponsibleName: 'ResponsibleName',
  CountryId: 'CountryId'
};

exports.Prisma.B2BRibbonsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BSportCustomerTypesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BSportTypesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.B2BSportUserRolesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.CampaignsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  DiscountTypeId: 'DiscountTypeId',
  DiscountPercentage: 'DiscountPercentage',
  RequiresCouponCode: 'RequiresCouponCode',
  CouponCode: 'CouponCode',
  LimitationTimes: 'LimitationTimes',
  CountryId: 'CountryId',
  StartDateUtc: 'StartDateUtc',
  EndDateUtc: 'EndDateUtc',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.CancellationReasonsScalarFieldEnum = {
  Id: 'Id',
  Reason: 'Reason',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.ColoursScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  fk_country: 'fk_country',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BColorCode: 'B2BColorCode',
  HexCode: 'HexCode',
  RgbColor: 'RgbColor',
  IsTextured: 'IsTextured'
};

exports.Prisma.CommunicationTypesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.ComplaintsScalarFieldEnum = {
  Id: 'Id',
  Cause: 'Cause',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.ContactPersonScalarFieldEnum = {
  Id: 'Id',
  Phone: 'Phone',
  Email: 'Email',
  fk_customerId: 'fk_customerId',
  Comment: 'Comment',
  Firstname: 'Firstname',
  Lastname: 'Lastname',
  Linkedin: 'Linkedin',
  Newsletter: 'Newsletter',
  Showroom: 'Showroom',
  fk_jobtitle: 'fk_jobtitle',
  EconomicId: 'EconomicId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  fk_b2bsportuserroles: 'fk_b2bsportuserroles'
};

exports.Prisma.CurrentStatusesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.CustomerAlternativeAddressesScalarFieldEnum = {
  Id: 'Id',
  Company: 'Company',
  Address: 'Address',
  zip: 'zip',
  City: 'City',
  Country: 'Country',
  ATT: 'ATT',
  Phone: 'Phone',
  Email: 'Email',
  CustomerId: 'CustomerId',
  RequestId: 'RequestId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  Address2: 'Address2'
};

exports.Prisma.CustomerChannelsScalarFieldEnum = {
  Id: 'Id',
  Channel: 'Channel',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.CustomersScalarFieldEnum = {
  Id: 'Id',
  CreationDate: 'CreationDate',
  Att: 'Att',
  Telephone: 'Telephone',
  Email: 'Email',
  CVR: 'CVR',
  Name: 'Name',
  Address: 'Address',
  EAN: 'EAN',
  InvoicingAddress: 'InvoicingAddress',
  ZipCodeId: 'ZipCodeId',
  IndustryId: 'IndustryId',
  InvoicingZipId: 'InvoicingZipId',
  InvoicingEmail: 'InvoicingEmail',
  Newsletter: 'Newsletter',
  ResellerId: 'ResellerId',
  Showroom: 'Showroom',
  B2BResponsibleId: 'B2BResponsibleId',
  ChannelId: 'ChannelId',
  Currency: 'Currency',
  PaymentTermsId: 'PaymentTermsId',
  VatZoneId: 'VatZoneId',
  City: 'City',
  CountryId: 'CountryId',
  AlternativeZip: 'AlternativeZip',
  ModifiedDate: 'ModifiedDate',
  DUNSNumber: 'DUNSNumber',
  Address2: 'Address2',
  fk_b2bcustomerprofessiontype: 'fk_b2bcustomerprofessiontype',
  fk_b2bsporttype: 'fk_b2bsporttype',
  fk_mastercustomertype: 'fk_mastercustomertype'
};

exports.Prisma.EmailTemplatesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Body: 'Body',
  CountryId: 'CountryId',
  EmailTemplateType: 'EmailTemplateType',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  Subject: 'Subject',
  IncludeTerms: 'IncludeTerms'
};

exports.Prisma.EndStatusesScalarFieldEnum = {
  Id: 'Id',
  Status: 'Status',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.ErrorMessagesScalarFieldEnum = {
  Id: 'Id',
  Error: 'Error',
  ErrStatus: 'ErrStatus',
  ErrMsg: 'ErrMsg',
  ErrCode: 'ErrCode',
  Data: 'Data',
  B2BParrentProductsparrentProduct_id: 'B2BParrentProductsparrentProduct_id',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  TempB2BParentProductId: 'TempB2BParentProductId'
};

exports.Prisma.Handling_PriceClassScalarFieldEnum = {
  Id: 'Id',
  PriceClass: 'PriceClass',
  Currency: 'Currency',
  Quantity: 'Quantity',
  Price: 'Price',
  Margin: 'Margin',
  fk_country: 'fk_country',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.Imprint_PriceClassesScalarFieldEnum = {
  Id: 'Id',
  PriceClass: 'PriceClass',
  Currency: 'Currency',
  Quantity: 'Quantity',
  Price: 'Price',
  Price2: 'Price2',
  Price3: 'Price3',
  Price4: 'Price4',
  Price5: 'Price5',
  Price6: 'Price6',
  Margin: 'Margin',
  Price7: 'Price7',
  MaxColors: 'MaxColors',
  StartupPrice: 'StartupPrice',
  Alert: 'Alert',
  NextColorPrice: 'NextColorPrice',
  description: 'description',
  fk_country: 'fk_country',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  Supplier: 'Supplier',
  NopId: 'NopId',
  NopSynced: 'NopSynced',
  SupplierLogId: 'SupplierLogId'
};

exports.Prisma.IndustriesScalarFieldEnum = {
  Id: 'Id',
  Code: 'Code',
  Industry: 'Industry',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.JobTitlesScalarFieldEnum = {
  Id: 'Id',
  Title: 'Title',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.LocalStringsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  LocalString: 'LocalString',
  Category: 'Category',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.LogoFilesScalarFieldEnum = {
  Id: 'Id',
  Url: 'Url',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  CustomerId: 'CustomerId',
  RequestProductId: 'RequestProductId',
  NopId: 'NopId',
  DownloadUrl: 'DownloadUrl',
  Name: 'Name',
  RequestCommunicationId: 'RequestCommunicationId',
  RequestId: 'RequestId',
  CountryId: 'CountryId'
};

exports.Prisma.LogsScalarFieldEnum = {
  Id: 'Id',
  ErrorMessage: 'ErrorMessage',
  ErrorException: 'ErrorException',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.MasterCustomerTypesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.MasterPropertiesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Value: 'Value',
  Initialized: 'Initialized'
};

exports.Prisma.MultipleColorsScalarFieldEnum = {
  Id: 'Id',
  HexCode: 'HexCode',
  RgbColor: 'RgbColor',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  ColourId: 'ColourId'
};

exports.Prisma.OutlookAddinCategoriesScalarFieldEnum = {
  Id: 'Id',
  Category: 'Category',
  CountryId: 'CountryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  Label: 'Label'
};

exports.Prisma.ParentProductB2BMainCategoriesScalarFieldEnum = {
  B2BParentProductId: 'B2BParentProductId',
  B2BMainCategoryId: 'B2BMainCategoryId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  TempB2BParentProductId: 'TempB2BParentProductId'
};

exports.Prisma.ParentProductB2BProductSizesScalarFieldEnum = {
  B2BParentProductId: 'B2BParentProductId',
  B2BProductSizeId: 'B2BProductSizeId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  TempB2BParentProductId: 'TempB2BParentProductId'
};

exports.Prisma.ParentProductB2BProductTextileSizesScalarFieldEnum = {
  B2BParentProductId: 'B2BParentProductId',
  B2BProductTextileSizeId: 'B2BProductTextileSizeId',
  Quantity: 'Quantity',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  TempB2BParentProductId: 'TempB2BParentProductId'
};

exports.Prisma.ParentProductB2BRibbonsScalarFieldEnum = {
  B2BParentProductId: 'B2BParentProductId',
  B2BRibbonId: 'B2BRibbonId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.PaymentStatusesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.PaymentTermsScalarFieldEnum = {
  Id: 'Id',
  PaymentTermsNumber: 'PaymentTermsNumber',
  DaysOfCredit: 'DaysOfCredit',
  Description: 'Description',
  Name: 'Name',
  PaymentTermsType: 'PaymentTermsType',
  EconomicLink: 'EconomicLink'
};

exports.Prisma.PaymentTypesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  DisplayName: 'DisplayName'
};

exports.Prisma.PrintTechniquesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  B2BName: 'B2BName',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  CountryId: 'CountryId'
};

exports.Prisma.ProductLogScalarFieldEnum = {
  Id: 'Id',
  B2BParrentProductsparrentProduct_id: 'B2BParrentProductsparrentProduct_id',
  B2BResponsibleId: 'B2BResponsibleId',
  AlertId: 'AlertId',
  Title: 'Title',
  Description: 'Description',
  Comment: 'Comment',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  Date: 'Date',
  LogType: 'LogType'
};

exports.Prisma.ProductStatusScalarFieldEnum = {
  Id: 'Id',
  Reason: 'Reason'
};

exports.Prisma.ProductSyncWarningsScalarFieldEnum = {
  Id: 'Id',
  ParentProductparrentProduct_id: 'ParentProductparrentProduct_id',
  ErrorMsg: 'ErrorMsg',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.RequestCommunicationLogoFilesScalarFieldEnum = {
  LogoFilesId: 'LogoFilesId',
  CommunicationId: 'CommunicationId',
  Id: 'Id',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.RequestCommunicationsScalarFieldEnum = {
  Id: 'Id',
  RequestId: 'RequestId',
  Date: 'Date',
  Recipient: 'Recipient',
  Note: 'Note',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  CountryId: 'CountryId',
  IsSent: 'IsSent',
  Subject: 'Subject',
  To: 'To',
  IncludeTerms: 'IncludeTerms',
  Category: 'Category',
  FromOutlook: 'FromOutlook',
  CommunicationTypeId: 'CommunicationTypeId'
};

exports.Prisma.RequestLogoFilesScalarFieldEnum = {
  LogoFilesId: 'LogoFilesId',
  RequestId: 'RequestId',
  Id: 'Id',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.RequestPrintProofsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CustomerId: 'CustomerId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  RequestId: 'RequestId',
  CountryId: 'CountryId'
};

exports.Prisma.RequestProductB2BPrintPositionsScalarFieldEnum = {
  RequestProductId: 'RequestProductId',
  PrintPositionId: 'PrintPositionId',
  Id: 'Id',
  ChosenColors: 'ChosenColors',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  TempB2BPrintPositionsId: 'TempB2BPrintPositionsId'
};

exports.Prisma.RequestProductB2BTextileSizesScalarFieldEnum = {
  Id: 'Id',
  RequestProductId: 'RequestProductId',
  TextileSizeId: 'TextileSizeId',
  Quantity: 'Quantity',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.RequestProductsScalarFieldEnum = {
  Id: 'Id',
  RequestId: 'RequestId',
  B2BCategoryId: 'B2BCategoryId',
  Price: 'Price',
  Volume: 'Volume',
  OrderDate: 'OrderDate',
  ShippingDate: 'ShippingDate',
  DeliveryDate: 'DeliveryDate',
  TrackingCode: 'TrackingCode',
  Comment: 'Comment',
  SupplierId: 'SupplierId',
  ComplaintId: 'ComplaintId',
  SKUparrentProduct_id: 'SKUparrentProduct_id',
  fk_b2bProduct: 'fk_b2bProduct',
  MaxColoursChoesen: 'MaxColoursChoesen',
  PrintPosition1Id: 'PrintPosition1Id',
  PrintPosition2Id: 'PrintPosition2Id',
  PrintPosition3Id: 'PrintPosition3Id',
  PrintPosition4Id: 'PrintPosition4Id',
  PrintPosition5Id: 'PrintPosition5Id',
  PrintPosition6Id: 'PrintPosition6Id',
  DiscountPercent: 'DiscountPercent',
  DiscountPrice: 'DiscountPrice',
  PrintPirce: 'PrintPirce',
  ProductSku: 'ProductSku',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  NopDiscount: 'NopDiscount',
  TotalSetupPrice: 'TotalSetupPrice',
  ProductSizeId: 'ProductSizeId'
};

exports.Prisma.RequestsScalarFieldEnum = {
  Id: 'Id',
  RequestDate: 'RequestDate',
  B2bInvoiceNumber: 'B2bInvoiceNumber',
  InvoiceDate: 'InvoiceDate',
  DueDate: 'DueDate',
  TrustPilot: 'TrustPilot',
  TrustPilotDate: 'TrustPilotDate',
  LegalAction: 'LegalAction',
  Comment: 'Comment',
  PaymentDate: 'PaymentDate',
  RequestDeadline: 'RequestDeadline',
  CustomerId: 'CustomerId',
  ExpressDelivery: 'ExpressDelivery',
  ExpressProduction: 'ExpressProduction',
  DeliveryAddress: 'DeliveryAddress',
  DeliveryZipId: 'DeliveryZipId',
  EndStatusId: 'EndStatusId',
  StartStatusId: 'StartStatusId',
  SampleApproved: 'SampleApproved',
  SampleRequested: 'SampleRequested',
  SampleSent: 'SampleSent',
  CancellationReasonId: 'CancellationReasonId',
  CurrentStatusId: 'CurrentStatusId',
  B2bOrderNumber: 'B2bOrderNumber',
  OrderStatus: 'OrderStatus',
  OrderNumber: 'OrderNumber',
  DraftLink: 'DraftLink',
  fk_contactPersonId: 'fk_contactPersonId',
  OrderHeading: 'OrderHeading',
  OrderReference: 'OrderReference',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  OrderPaid: 'OrderPaid',
  PaymentStatusId: 'PaymentStatusId',
  PaymentTypeId: 'PaymentTypeId',
  InvoiceNumber: 'InvoiceNumber',
  QuoteNumber: 'QuoteNumber',
  BookedNumber: 'BookedNumber',
  B2BResponsibleId: 'B2BResponsibleId'
};

exports.Prisma.ResellersScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  EconomicGroupNumber: 'EconomicGroupNumber',
  EconomicLink: 'EconomicLink',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.StartStatusesScalarFieldEnum = {
  Id: 'Id',
  Status: 'Status',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SupplierChildSkusScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  B2BProductproduct_id: 'B2BProductproduct_id',
  TempB2BProductsId: 'TempB2BProductsId'
};

exports.Prisma.SupplierColoursScalarFieldEnum = {
  Id: 'Id',
  SupplierColorName: 'SupplierColorName',
  B2BColorNameId: 'B2BColorNameId',
  SupplierId: 'SupplierId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SupplierHandlesScalarFieldEnum = {
  handles_id: 'handles_id',
  handles_code: 'handles_code',
  handles_description: 'handles_description',
  handles_supplierPrice: 'handles_supplierPrice',
  handles_priceDK: 'handles_priceDK',
  handles_priceEU: 'handles_priceEU',
  handles_priceFI: 'handles_priceFI',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SupplierHandlingCostScalarFieldEnum = {
  Id: 'Id',
  code: 'code',
  price: 'price',
  supplierId: 'supplierId',
  countryId: 'countryId'
};

exports.Prisma.SupplierLogsScalarFieldEnum = {
  Id: 'Id',
  SupplierId: 'SupplierId',
  AlertId: 'AlertId',
  Title: 'Title',
  Description: 'Description',
  Comment: 'Comment',
  LogType: 'LogType',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  TotalAdded: 'TotalAdded',
  TotalUpdated: 'TotalUpdated'
};

exports.Prisma.SupplierPrintCostsScalarFieldEnum = {
  printCost_id: 'printCost_id',
  printCost_rangeId: 'printCost_rangeId',
  fk_supplierPrintPriceprintPrice_id: 'fk_supplierPrintPriceprintPrice_id',
  alert: 'alert',
  alertMessage: 'alertMessage',
  alertStatus: 'alertStatus',
  printCost_areaFrom: 'printCost_areaFrom',
  printCost_areaTo: 'printCost_areaTo',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SupplierPrintPricesScalarFieldEnum = {
  printPrice_id: 'printPrice_id',
  printPrice_nextColourIndicator: 'printPrice_nextColourIndicator',
  printPrice_pricingType: 'printPrice_pricingType',
  printPrice_repeat: 'printPrice_repeat',
  printPrice_description: 'printPrice_description',
  printPrice_setupDK: 'printPrice_setupDK',
  printPrice_setupEU: 'printPrice_setupEU',
  printPrice_setupFI: 'printPrice_setupFI',
  alert: 'alert',
  alertMessage: 'alertMessage',
  alertStatus: 'alertStatus',
  printPrice_descId: 'printPrice_descId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SupplierPrintPriceScalesScalarFieldEnum = {
  scale_id: 'scale_id',
  scale_minimumQuantity: 'scale_minimumQuantity',
  fk_supplerPrintCostprintCost_id: 'fk_supplerPrintCostprintCost_id',
  scale_supplierPrice: 'scale_supplierPrice',
  scale_priceDK: 'scale_priceDK',
  scale_priceEU: 'scale_priceEU',
  scale_priceFI: 'scale_priceFI',
  alert: 'alert',
  alertMessage: 'alertMessage',
  alertStatus: 'alertStatus',
  scale_nextPriceDK: 'scale_nextPriceDK',
  scale_nextPriceEU: 'scale_nextPriceEU',
  scale_nextPriceFI: 'scale_nextPriceFI',
  scale_nextPriceSupplier: 'scale_nextPriceSupplier',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SupplierProductBacklogsScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  SupplierSKU: 'SupplierSKU',
  ImageURL: 'ImageURL',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  SupplierName: 'SupplierName',
  SupplierId: 'SupplierId'
};

exports.Prisma.SuppliersScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Code: 'Code',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  ExternalImprint: 'ExternalImprint',
  InternalImprint: 'InternalImprint',
  Email: 'Email',
  Address: 'Address',
  AltAddress: 'AltAddress',
  BankAccountNumber: 'BankAccountNumber',
  City: 'City',
  ContactEmail: 'ContactEmail',
  ContactMobile: 'ContactMobile',
  ContactName: 'ContactName',
  ContactPhone: 'ContactPhone',
  Country: 'Country',
  CustomerNumber: 'CustomerNumber',
  EmailFinance: 'EmailFinance',
  EmailPO: 'EmailPO',
  IBAN: 'IBAN',
  Password: 'Password',
  PaymentCondition: 'PaymentCondition',
  Phone: 'Phone',
  SWIFT: 'SWIFT',
  Username: 'Username',
  Website: 'Website',
  Zip: 'Zip',
  SupplierAPIKey: 'SupplierAPIKey',
  SupplierAPIBaseUrl: 'SupplierAPIBaseUrl',
  SupplierAPIPriceClassUrl: 'SupplierAPIPriceClassUrl',
  SupplierAPIAuthType: 'SupplierAPIAuthType',
  SupplierAPIPrintDataUrl: 'SupplierAPIPrintDataUrl',
  SupplierAPIProductsUrl: 'SupplierAPIProductsUrl',
  SupplierAPIProductPricesUrl: 'SupplierAPIProductPricesUrl',
  SupplierAPIStockUrl: 'SupplierAPIStockUrl',
  SupplierAPIPrintDataUrl_Secondary: 'SupplierAPIPrintDataUrl_Secondary',
  APIDataSource: 'APIDataSource',
  ManaualDataSource: 'ManaualDataSource',
  SupplierCDNUrl: 'SupplierCDNUrl'
};

exports.Prisma.SupplierTextileSizesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  SupplierId: 'SupplierId',
  B2BProductTextileSizeId: 'B2BProductTextileSizeId',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SysdiagramsScalarFieldEnum = {
  name: 'name',
  principal_id: 'principal_id',
  diagram_id: 'diagram_id',
  version: 'version',
  definition: 'definition'
};

exports.Prisma.TempB2BParentProductsScalarFieldEnum = {
  Id: 'Id',
  fk_country: 'fk_country',
  parrentProduct_productName: 'parrentProduct_productName',
  parrentProduct_masterId: 'parrentProduct_masterId',
  parrentProduct_parrentSku: 'parrentProduct_parrentSku',
  parrentProduct_printPositions: 'parrentProduct_printPositions',
  parrentProduct_dimensions: 'parrentProduct_dimensions',
  parrentProduct_length: 'parrentProduct_length',
  parrentProduct_width: 'parrentProduct_width',
  parrentProduct_height: 'parrentProduct_height',
  parrentProduct_longDescription: 'parrentProduct_longDescription',
  parrentProduct_shortDescription: 'parrentProduct_shortDescription',
  parrentProduct_printable: 'parrentProduct_printable',
  parrentProduct_material: 'parrentProduct_material',
  parrentProduct_mainCategory: 'parrentProduct_mainCategory',
  parrentProduct_supplierSubCategory: 'parrentProduct_supplierSubCategory',
  B2BMasterCategoryId: 'B2BMasterCategoryId',
  B2BProductTypeId: 'B2BProductTypeId',
  alert: 'alert',
  alertStatus: 'alertStatus',
  alertMessage: 'alertMessage',
  Supplier: 'Supplier',
  B2BBrandsId: 'B2BBrandsId',
  B2BMaterialId: 'B2BMaterialId',
  NopSynced: 'NopSynced',
  Deactivate: 'Deactivate',
  StatusId: 'StatusId',
  ProductSheet: 'ProductSheet',
  ProductTemplate: 'ProductTemplate',
  SeoUrl: 'SeoUrl',
  B2BDeliveryTimeId: 'B2BDeliveryTimeId',
  B2BOrderQuantityId: 'B2BOrderQuantityId',
  DeleteProduct: 'DeleteProduct',
  SupplierProductName: 'SupplierProductName',
  SupplierDescription: 'SupplierDescription',
  SupplierCategory: 'SupplierCategory',
  B2BEco: 'B2BEco',
  ExpiryDate: 'ExpiryDate',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.TempB2BPrintPositionsScalarFieldEnum = {
  Id: 'Id',
  Position: 'Position',
  fk_country: 'fk_country',
  parentProductId: 'parentProductId',
  print_productName: 'print_productName',
  print_supplier: 'print_supplier',
  print_express: 'print_express',
  print_position: 'print_position',
  print_type: 'print_type',
  print_dimensions: 'print_dimensions',
  MaxColors: 'MaxColors',
  fk_imprint_priceClass: 'fk_imprint_priceClass',
  fk_alertId: 'fk_alertId',
  child_product: 'child_product',
  ExternalPrint: 'ExternalPrint',
  IsDisabled: 'IsDisabled',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  ExpiryDate: 'ExpiryDate'
};

exports.Prisma.TempB2BProductImagesScalarFieldEnum = {
  Id: 'Id',
  ImagePath: 'ImagePath',
  Name: 'Name',
  Fk_childProductId: 'Fk_childProductId',
  ExpiryDate: 'ExpiryDate',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.TempB2BProductPricesScalarFieldEnum = {
  Id: 'Id',
  fk_country: 'fk_country',
  ParentProductparrentProduct_id: 'ParentProductparrentProduct_id',
  parrentSku: 'parrentSku',
  price_startingPriceSupplier: 'price_startingPriceSupplier',
  PriceStart: 'PriceStart',
  PriceQ1: 'PriceQ1',
  PriceQ2: 'PriceQ2',
  PriceQ3: 'PriceQ3',
  PriceQ4: 'PriceQ4',
  PriceQ5: 'PriceQ5',
  PriceQ6: 'PriceQ6',
  PriceP1: 'PriceP1',
  PriceP2: 'PriceP2',
  PriceP3: 'PriceP3',
  PriceP4: 'PriceP4',
  PriceP5: 'PriceP5',
  PriceP6: 'PriceP6',
  CostPriceQ1: 'CostPriceQ1',
  CostPriceQ2: 'CostPriceQ2',
  CostPriceQ3: 'CostPriceQ3',
  CostPriceQ4: 'CostPriceQ4',
  CostPriceQ5: 'CostPriceQ5',
  CostPriceQ6: 'CostPriceQ6',
  CostPriceP1: 'CostPriceP1',
  CostPriceP2: 'CostPriceP2',
  CostPriceP3: 'CostPriceP3',
  CostPriceP4: 'CostPriceP4',
  CostPriceP5: 'CostPriceP5',
  CostPriceP6: 'CostPriceP6',
  price_startingPriceDK: 'price_startingPriceDK',
  price_startingPriceEU: 'price_startingPriceEU',
  price_startingPriceFI: 'price_startingPriceFI',
  price_validUntill: 'price_validUntill',
  ExpiryDate: 'ExpiryDate',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  tempParentProductId: 'tempParentProductId'
};

exports.Prisma.TempB2BProductsScalarFieldEnum = {
  Id: 'Id',
  fk_country: 'fk_country',
  product_sku: 'product_sku',
  fk_parentSKU: 'fk_parentSKU',
  product_ColorNameId: 'product_ColorNameId',
  product_brandNames: 'product_brandNames',
  product_shortDescription: 'product_shortDescription',
  product_shortDescriptionEN: 'product_shortDescriptionEN',
  product_shortDescriptionFI: 'product_shortDescriptionFI',
  product_longDescriptionDK: 'product_longDescriptionDK',
  product_longDescriptionEN: 'product_longDescriptionEN',
  product_longDescriptionFI: 'product_longDescriptionFI',
  product_PriceClass_IL1_T1: 'product_PriceClass_IL1_T1',
  product_PriceClass_IL1_T2: 'product_PriceClass_IL1_T2',
  product_PriceClass_IL1_T3: 'product_PriceClass_IL1_T3',
  product_PriceClass_IL1_T4: 'product_PriceClass_IL1_T4',
  product_PriceClass_IL1_T5: 'product_PriceClass_IL1_T5',
  product_PriceClass_IL1_T6: 'product_PriceClass_IL1_T6',
  product_PriceClass_IL1_CN: 'product_PriceClass_IL1_CN',
  product_PriceClass_IL1_CN2: 'product_PriceClass_IL1_CN2',
  product_PriceClass_IL1_CN3: 'product_PriceClass_IL1_CN3',
  product_PriceClass_IL1_CN4: 'product_PriceClass_IL1_CN4',
  product_PriceClass_IL1_CN5: 'product_PriceClass_IL1_CN5',
  product_PriceClass_IL1_CN6: 'product_PriceClass_IL1_CN6',
  product_IntraCode: 'product_IntraCode',
  product_CountryOfOrigin: 'product_CountryOfOrigin',
  product_CommercialItemLength: 'product_CommercialItemLength',
  product_CommercialItemWidth: 'product_CommercialItemWidth',
  product_CommercialItemHeight: 'product_CommercialItemHeight',
  product_CommercialItemWeight: 'product_CommercialItemWeight',
  product_Flavours: 'product_Flavours',
  product_Sizes: 'product_Sizes',
  product_WritingColor: 'product_WritingColor',
  product_OrderUnit: 'product_OrderUnit',
  product_BatteryType: 'product_BatteryType',
  product_NumberOfBatteries: 'product_NumberOfBatteries',
  product_ProductImageURL: 'product_ProductImageURL',
  product_DeliveryTimeMT_IL1_T1: 'product_DeliveryTimeMT_IL1_T1',
  product_SearchTerms: 'product_SearchTerms',
  product_Q_OnPallet: 'product_Q_OnPallet',
  product_color: 'product_color',
  product_stock: 'product_stock',
  ProductTypeId: 'ProductTypeId',
  ExpiryDate: 'ExpiryDate',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate',
  tempParentProductId: 'tempParentProductId'
};

exports.Prisma.TempParentProductB2BProductTextileSizesScalarFieldEnum = {
  Id: 'Id',
  B2BProductTextileSizeId: 'B2BProductTextileSizeId',
  ParentProductparrentProduct_id: 'ParentProductparrentProduct_id',
  TempB2BParentProductId: 'TempB2BParentProductId',
  Quantity: 'Quantity',
  ExpiryDate: 'ExpiryDate',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.VatZonesScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  VatZoneNumber: 'VatZoneNumber',
  EnabledForCustomer: 'EnabledForCustomer',
  EnabledForSupplier: 'EnabledForSupplier',
  EconomicLink: 'EconomicLink'
};

exports.Prisma.ZipCodesScalarFieldEnum = {
  Id: 'Id',
  Country: 'Country',
  Amts: 'Amts',
  Region: 'Region',
  MunicipalityNumber: 'MunicipalityNumber',
  Municipality: 'Municipality',
  Zip: 'Zip',
  City: 'City',
  CreationDate: 'CreationDate',
  ModifiedDate: 'ModifiedDate'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  EFMigrationsHistory: 'EFMigrationsHistory',
  Alerts: 'Alerts',
  AspNetRoleClaims: 'AspNetRoleClaims',
  AspNetRoles: 'AspNetRoles',
  AspNetUserClaims: 'AspNetUserClaims',
  AspNetUserLogins: 'AspNetUserLogins',
  AspNetUserRoles: 'AspNetUserRoles',
  AspNetUsers: 'AspNetUsers',
  AspNetUserTokens: 'AspNetUserTokens',
  B2BBrands: 'B2BBrands',
  B2BCategoryGroups: 'B2BCategoryGroups',
  B2BCountry: 'B2BCountry',
  B2BDeliveryTime: 'B2BDeliveryTime',
  B2BMainCategory: 'B2BMainCategory',
  B2BMasterPrintPositions: 'B2BMasterPrintPositions',
  B2BMaterials: 'B2BMaterials',
  B2BOrderQuantity: 'B2BOrderQuantity',
  B2BParrentProducts: 'B2BParrentProducts',
  B2BPriceScaling: 'B2BPriceScaling',
  B2BPrintPositions: 'B2BPrintPositions',
  B2BPrintTypes: 'B2BPrintTypes',
  B2BProdducts: 'B2BProdducts',
  B2BProductImages: 'B2BProductImages',
  B2BProductPrices: 'B2BProductPrices',
  B2BProductSize: 'B2BProductSize',
  B2BProductTextileSizes: 'B2BProductTextileSizes',
  B2BProductTypes: 'B2BProductTypes',
  B2BResponsibles: 'B2BResponsibles',
  B2BRibbons: 'B2BRibbons',
  B2BSportCustomerTypes: 'B2BSportCustomerTypes',
  B2BSportTypes: 'B2BSportTypes',
  B2BSportUserRoles: 'B2BSportUserRoles',
  Campaigns: 'Campaigns',
  CancellationReasons: 'CancellationReasons',
  Colours: 'Colours',
  CommunicationTypes: 'CommunicationTypes',
  Complaints: 'Complaints',
  ContactPerson: 'ContactPerson',
  CurrentStatuses: 'CurrentStatuses',
  CustomerAlternativeAddresses: 'CustomerAlternativeAddresses',
  CustomerChannels: 'CustomerChannels',
  Customers: 'Customers',
  EmailTemplates: 'EmailTemplates',
  EndStatuses: 'EndStatuses',
  ErrorMessages: 'ErrorMessages',
  Handling_PriceClass: 'Handling_PriceClass',
  Imprint_PriceClasses: 'Imprint_PriceClasses',
  Industries: 'Industries',
  JobTitles: 'JobTitles',
  LocalStrings: 'LocalStrings',
  LogoFiles: 'LogoFiles',
  Logs: 'Logs',
  MasterCustomerTypes: 'MasterCustomerTypes',
  MasterProperties: 'MasterProperties',
  MultipleColors: 'MultipleColors',
  OutlookAddinCategories: 'OutlookAddinCategories',
  ParentProductB2BMainCategories: 'ParentProductB2BMainCategories',
  ParentProductB2BProductSizes: 'ParentProductB2BProductSizes',
  ParentProductB2BProductTextileSizes: 'ParentProductB2BProductTextileSizes',
  ParentProductB2BRibbons: 'ParentProductB2BRibbons',
  PaymentStatuses: 'PaymentStatuses',
  PaymentTerms: 'PaymentTerms',
  PaymentTypes: 'PaymentTypes',
  PrintTechniques: 'PrintTechniques',
  ProductLog: 'ProductLog',
  ProductStatus: 'ProductStatus',
  ProductSyncWarnings: 'ProductSyncWarnings',
  RequestCommunicationLogoFiles: 'RequestCommunicationLogoFiles',
  RequestCommunications: 'RequestCommunications',
  RequestLogoFiles: 'RequestLogoFiles',
  RequestPrintProofs: 'RequestPrintProofs',
  RequestProductB2BPrintPositions: 'RequestProductB2BPrintPositions',
  RequestProductB2BTextileSizes: 'RequestProductB2BTextileSizes',
  RequestProducts: 'RequestProducts',
  Requests: 'Requests',
  Resellers: 'Resellers',
  StartStatuses: 'StartStatuses',
  SupplierChildSkus: 'SupplierChildSkus',
  SupplierColours: 'SupplierColours',
  SupplierHandles: 'SupplierHandles',
  SupplierHandlingCost: 'SupplierHandlingCost',
  SupplierLogs: 'SupplierLogs',
  SupplierPrintCosts: 'SupplierPrintCosts',
  SupplierPrintPrices: 'SupplierPrintPrices',
  SupplierPrintPriceScales: 'SupplierPrintPriceScales',
  SupplierProductBacklogs: 'SupplierProductBacklogs',
  Suppliers: 'Suppliers',
  SupplierTextileSizes: 'SupplierTextileSizes',
  sysdiagrams: 'sysdiagrams',
  TempB2BParentProducts: 'TempB2BParentProducts',
  TempB2BPrintPositions: 'TempB2BPrintPositions',
  TempB2BProductImages: 'TempB2BProductImages',
  TempB2BProductPrices: 'TempB2BProductPrices',
  TempB2BProducts: 'TempB2BProducts',
  TempParentProductB2BProductTextileSizes: 'TempParentProductB2BProductTextileSizes',
  VatZones: 'VatZones',
  ZipCodes: 'ZipCodes'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
